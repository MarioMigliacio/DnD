//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DnD.UserStrings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SkillStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SkillStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DnD.UserStrings.SkillStrings", typeof(SkillStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can appraise common or well-known objects with a DC 12 Appraise check. Failure means that you estimate the value at 50% to 150% (2d6+3 times 10%,) of its actual value.
        ///
        ///Appraising a rare or exotic item requires a successful check against DC 15, 20, or higher. If the check is successful, you estimate the value correctly; failure means you cannot estimate the item’s value.
        ///
        ///A magnifying glass gives you a +2 circumstance bonus on Appraise checks involving any item that is small or highly detailed, such [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Appraise {
            get {
                return ResourceManager.GetString("Appraise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can walk on a precarious surface. A successful check lets you move at half your speed along the surface for 1 round. A failure by 4 or less means you can’t move for 1 round. A failure by 5 or more means you fall. (Armor Check Penalty).
        /// </summary>
        public static string Balance {
            get {
                return ResourceManager.GetString("Balance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Bluff check is opposed by the target’s Sense Motive check. See the accompanying table for examples of different kinds of bluffs and the modifier to the target’s Sense Motive check for each one.
        ///
        ///Favorable and unfavorable circumstances weigh heavily on the outcome of a bluff. Two circumstances can weigh against you: The bluff is hard to believe, or the action that the target is asked to take goes against its self-interest, nature, personality, orders, or the like. If it’s important, you can distinguish b [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Bluff {
            get {
                return ResourceManager.GetString("Bluff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With a successful Climb check, you can advance up, down, or across a slope, a wall, or some other steep incline (or even a ceiling with handholds) at one-quarter your normal speed. A slope is considered to be any incline at an angle measuring less than 60 degrees; a wall is any incline at an angle measuring 60 degrees or more.
        ///
        ///A Climb check that fails by 4 or less means that you make no progress, and one that fails by 5 or more means that you fall from whatever height you have already attained.
        ///
        ///A clim [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Climb {
            get {
                return ResourceManager.GetString("Climb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must make a Concentration check whenever you might potentially be distracted (by taking damage, by harsh weather, and so on) while engaged in some action that requires your full attention. Such actions include casting a spell, manifesting a power, concentrating on an active spell or power, directing a spell or power, using a spell-like or psi-like ability, or using a skill that would provoke an attack of opportunity. In general, if an action wouldn’t normally provoke an attack of opportunity, you need n [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Concentration {
            get {
                return ResourceManager.GetString("Concentration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like Knowledge, Perform, and Profession, Craft is actually a number of separate skills. You could have several Craft skills, each with its own ranks, each purchased as a separate skill.
        ///
        ///A Craft skill is specifically focused on creating something. If nothing is created by the endeavor, it probably falls under the heading of a Profession skill..
        /// </summary>
        public static string Craft {
            get {
                return ResourceManager.GetString("Craft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can decipher writing in an unfamiliar language or a message written in an incomplete or archaic form. The base DC is 20 for the simplest messages, 25 for standard texts, and 30 or higher for intricate, exotic, or very old writing.
        ///
        ///If the check succeeds, you understand the general content of a piece of writing about one page long (or the equivalent). If the check fails, make a DC 5 Wisdom check to see if you avoid drawing a false conclusion about the text. (Success means that you do not draw a false c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DecipherScript {
            get {
                return ResourceManager.GetString("DecipherScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change the attitudes of others (nonplayer characters) with a successful Diplomacy check; see the Influencing NPC Attitudes sidebar, below, for basic DCs. In negotiations, participants roll opposed Diplomacy checks, and the winner gains the advantage. Opposed checks also resolve situations when two advocates or diplomats plead opposite cases in a hearing before a third party..
        /// </summary>
        public static string Diplomacy {
            get {
                return ResourceManager.GetString("Diplomacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Disable Device check is made secretly, so that you don’t necessarily know whether you’ve succeeded.
        ///
        ///The DC depends on how tricky the device is. Disabling (or rigging or jamming) a fairly simple device has a DC of 10; more intricate and complex devices have higher DCs.
        ///
        ///If the check succeeds, you disable the device. If it fails by 4 or less, you have failed but can try again. If you fail by 5 or more, something goes wrong. If the device is a trap, you spring it. If you’re attempting some sort of sab [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DisableDevice {
            get {
                return ResourceManager.GetString("DisableDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Disguise check result determines how good the disguise is, and it is opposed by others’ Spot check results. If you don’t draw any attention to yourself, others do not get to make Spot checks. If you come to the attention of people who are suspicious (such as a guard who is watching commoners walking through a city gate), it can be assumed that such observers are taking 10 on their Spot checks.
        ///
        ///You get only one Disguise check per use of the skill, even if several people are making Spot checks against [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Disguise {
            get {
                return ResourceManager.GetString("Disguise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Escape Artist check is opposed by the binder’s Use Rope check. Since it’s easier to tie someone up than to escape from being tied up, the binder gets a +10 bonus on his or her check. (Armor Check Penalty).
        /// </summary>
        public static string EscapeArtist {
            get {
                return ResourceManager.GetString("EscapeArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forgery requires writing materials appropriate to the document being forged, enough light or sufficient visual acuity to see the details of what you’re writing, wax for seals (if appropriate), and some time. To forge a document on which the handwriting is not specific to a person (military orders, a government decree, a business ledger, or the like), you need only to have seen a similar document before, and you gain a +8 bonus on your check. To forge a signature, you need an autograph of that person to copy [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Forgery {
            get {
                return ResourceManager.GetString("Forgery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An evening’s time, a few gold pieces for buying drinks and making friends, and a DC 10 Gather Information check get you a general idea of a city’s major news items, assuming there are no obvious reasons why the information would be withheld. The higher your check result, the better the information.
        ///
        ///If you want to find out about a specific rumor, or a specific item, or obtain a map, or do something else along those lines, the DC for the check is 15 to 25, or even higher..
        /// </summary>
        public static string GatherInformation {
            get {
                return ResourceManager.GetString("GatherInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An evening’s time, a few gold pieces for buying drinks and making friends, and a DC 10 Gather Information check get you a general idea of a city’s major news items, assuming there are no obvious reasons why the information would be withheld. The higher your check result, the better the information.
        ///
        ///If you want to find out about a specific rumor, or a specific item, or obtain a map, or do something else along those lines, the DC for the check is 15 to 25, or even higher..
        /// </summary>
        public static string HandleAnimal {
            get {
                return ResourceManager.GetString("HandleAnimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You usually use first aid to save a dying character. If a character has negative hit points and is losing hit points (at the rate of 1 per round, 1 per hour, or 1 per day), you can make him or her stable. A stable character regains no hit points but stops losing them..
        /// </summary>
        public static string Heal {
            get {
                return ResourceManager.GetString("Heal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Hide check is opposed by the Spot check of anyone who might see you. You can move up to one-half your normal speed and hide at no penalty. When moving at a speed greater than one-half but less than your normal speed, you take a –5 penalty. It’s practically impossible (–20 penalty) to hide while attacking, running or charging.
        ///
        ///A creature larger or smaller than Medium takes a size bonus or penalty on Hide checks depending on its size category: Fine +16, Diminutive +12, Tiny +8, Small +4, Large –4, Hug [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Hide {
            get {
                return ResourceManager.GetString("Hide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change another’s behavior with a successful check. Your Intimidate check is opposed by the target’s modified level check (1d20 + character level or Hit Dice + target’s Wisdom bonus [if any] + target’s modifiers on saves against fear). If you beat your target’s check result, you may treat the target as friendly, but only for the purpose of actions taken while it remains intimidated. (That is, the target retains its normal attitude, but will chat, advise, offer limited help, or advocate on your behalf [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Intimidate {
            get {
                return ResourceManager.GetString("Intimidate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DC and the distance you can cover vary according to the type of jump you are attempting (see below).
        ///
        ///Your Jump check is modified by your speed. If your speed is 30 feet then no modifier based on speed applies to the check. If your speed is less than 30 feet, you take a –6 penalty for every 10 feet of speed less than 30 feet. If your speed is greater than 30 feet, you gain a +4 bonus for every 10 feet beyond 30 feet.
        ///
        ///All Jump DCs given here assume that you get a running start, which requires that y [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Jump {
            get {
                return ResourceManager.GetString("Jump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like the Craft and Profession skills, Knowledge actually encompasses a number of unrelated skills. Knowledge represents a study of some body of lore, possibly an academic or even scientific discipline.
        ///
        ///Below are listed typical fields of study.
        ///
        ///Arcana (ancient mysteries, magic traditions, arcane symbols, cryptic phrases, constructs, dragons, magical beasts)
        ///Architecture and engineering (buildings, aqueducts, bridges, fortifications)
        ///Dungeoneering (aberrations, caverns, oozes, spelunking)
        ///Geography ( [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Knowledge {
            get {
                return ResourceManager.GetString("Knowledge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Listen check is either made against a DC that reflects how quiet the noise is that you might hear, or it is opposed by your target’s Move Silently check..
        /// </summary>
        public static string Listen {
            get {
                return ResourceManager.GetString("Listen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Move Silently check is opposed by the Listen check of anyone who might hear you. You can move up to one-half your normal speed at no penalty. When moving at a speed greater than one-half but less than your full speed, you take a –5 penalty. It’s practically impossible (–20 penalty) to move silently while running or charging.
        ///
        ///Noisy surfaces, such as bogs or undergrowth, are tough to move silently across. When you try to sneak across such a surface, you take a penalty on your Move Silently check. (Arm [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MoveSilently {
            get {
                return ResourceManager.GetString("MoveSilently", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting an Open Lock check without a set of thieves’ tools imposes a –2 circumstance penalty on the check, even if a simple tool is employed. If you use masterwork thieves’ tools, you gain a +2 circumstance bonus on the check. The DC for opening a lock varies from 20 to 40, depending on the quality of the lock.
        /// </summary>
        public static string OpenLock {
            get {
                return ResourceManager.GetString("OpenLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like Craft, Knowledge, and Profession, Perform is actually a number of separate skills.
        ///
        ///You could have several Perform skills, each with its own ranks, each purchased as a separate skill.
        ///
        ///Each of the nine categories of the Perform skill includes a variety of methods, instruments, or techniques, a small list of which is provided for each category below.
        ///
        ///Act (comedy, drama, mime)
        ///Comedy (buffoonery, limericks, joke-telling)
        ///Dance (ballet, waltz, jig)
        ///Keyboard instruments (harpsichord, piano, pipe  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Perform {
            get {
                return ResourceManager.GetString("Perform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like Craft, Knowledge, and Perform, Profession is actually a number of separate skills. You could have several Profession skills, each with its own ranks, each purchased as a separate skill. While a Craft skill represents ability in creating or making an item, a Profession skill represents an aptitude in a vocation requiring a broader range of less specific knowledge.
        ///
        ///You can practice your trade and make a decent living, earning about half your Profession check result in gold pieces per week of dedicated [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Profession {
            get {
                return ResourceManager.GetString("Profession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you attempt to ride a creature that is ill suited as a mount, you take a –5 penalty on your Ride checks. See the manual for more specific details. (Armor Check Penalty).
        /// </summary>
        public static string Ride {
            get {
                return ResourceManager.GetString("Ride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You generally must be within 10 feet of the object or surface to be searched. The table below gives DCs for typical tasks involving the Search skill. See the manual for more specific details..
        /// </summary>
        public static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A successful check lets you avoid being bluffed (see the Bluff skill). You can also use this skill to determine when “something is up” (that is, something odd is going on) or to assess someone’s trustworthiness. See the manual for more specific details..
        /// </summary>
        public static string SenseMotive {
            get {
                return ResourceManager.GetString("SenseMotive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A DC 10 Sleight of Hand check lets you palm a coin-sized, unattended object. Performing a minor feat of legerdemain, such as making a coin disappear, also has a DC of 10 unless an observer is determined to note where the item went.
        ///
        ///When you use this skill under close observation, your skill check is opposed by the observer’s Spot check. The observer’s success doesn’t prevent you from performing the action, just from doing it unnoticed.
        ///
        ///You can hide a small object (including a light weapon or an easily [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SleightOfHand {
            get {
                return ResourceManager.GetString("SleightOfHand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn a specific languauge..
        /// </summary>
        public static string SpeakLanguage {
            get {
                return ResourceManager.GetString("SpeakLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this skill to identify spells as they are cast or spells already in place. See the manual for more details..
        /// </summary>
        public static string Spellcraft {
            get {
                return ResourceManager.GetString("Spellcraft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Spot skill is used primarily to detect characters or creatures who are hiding. Typically, your Spot check is opposed by the Hide check of the creature trying not to be seen. Sometimes a creature isn’t intentionally hiding but is still difficult to see, so a successful Spot check is necessary to notice it.
        ///
        ///A Spot check result higher than 20 generally lets you become aware of an invisible creature near you, though you can’t actually see it.
        ///
        ///Spot is also used to detect someone in disguise (see the Di [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Spot {
            get {
                return ResourceManager.GetString("Spot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can keep yourself and others safe and fed in the wild. The table below gives the DCs for various tasks that require Survival checks.
        ///
        ///Survival does not allow you to follow difficult tracks unless you are a ranger or have the Track feat.
        /// </summary>
        public static string Survival {
            get {
                return ResourceManager.GetString("Survival", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make a Swim check once per round while you are in the water. Success means you may swim at up to one-half your speed (as a full-round action) or at one-quarter your speed (as a move action). If you fail by 4 or less, you make no progress through the water. If you fail by 5 or more, you go underwater.
        ///
        ///If you are underwater, either because you failed a Swim check or because you are swimming underwater intentionally, you must hold your breath. You can hold your breath for a number of rounds equal to your Co [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Swim {
            get {
                return ResourceManager.GetString("Swim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can’t use this skill if your speed has been reduced by armor, excess equipment, or loot. You can land softly when you fall or tumble past opponents. You can also tumble to entertain an audience (as though using the Perform skill). (Armor Check Penalty).
        /// </summary>
        public static string Tumble {
            get {
                return ResourceManager.GetString("Tumble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use this skill to read a spell or to activate a magic item. Use Magic Device lets you use a magic item as if you had the spell ability or class features of another class, as if you were a different race, or as if you were of a different alignment.
        ///
        ///You make a Use Magic Device check each time you activate a device such as a wand. If you are using the check to emulate an alignment or some other quality in an ongoing manner, you need to make the relevant Use Magic Device check once per hour.
        ///
        ///You m [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UseMagicDevice {
            get {
                return ResourceManager.GetString("UseMagicDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the manual for the detailed list of rope checks..
        /// </summary>
        public static string UseRope {
            get {
                return ResourceManager.GetString("UseRope", resourceCulture);
            }
        }
    }
}
